swagger: '2.0'
info:
  description: 'Assisted swarm'
  version: 1.0.0
  title: AssistedSwarm
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.assisted-swarm.com
basePath: /api/assisted-swarm
tags:
  - name: swarm
    description: Assisted swarm installation
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /agents:
    get:
      tags:
        - swarm
      summary: List all running agents.
      operationId: ListAgents
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/agent_list'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    post:
      tags:
        - swarm
      summary: Create new agent.
      operationId: CreateNewAgent
      parameters:
        - in: body
          name: new-agent-params
          description: Create new agent for swarm.
          schema:
            $ref: '#/definitions/new-agent-params'
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/agent'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /agents/{agent_id}:
    get:
      tags:
        - swarm
      summary: Get specific agent.
      operationId: GetAgent
      parameters:
        - in: path
          name: agent_id
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/agent'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - swarm
      summary: Delete agent.
      operationId: DeleteAgent
      parameters:
        - in: path
          name: agent_id
          type: integer
          required: true
      responses:
        "204":
          description: Success
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /exit:
    get:
      tags:
        - swarm
      operationId: Exit
      summary: Exit the process.
      responses:
        "204":
          description: Success.

  /health:
    get:
      tags:
        - swarm
      operationId: Health
      summary: Health check.
      responses:
        "204":
          description: Success.

definitions:
  new-agent-params:
    type: object
    properties:
      service_url:
        type: string
      infra_env_id:
        type: string
        format: uuid
      agent_version:
        type: string
      cacert:
        type: string
      pull_secret:
        type: string
      containers_conf:
        type: string
      containers_storage_conf:
        type: string
      dry_forced_host_id:
        type: string
        format: uuid
      dry_forced_host_ipv4:
        type: string
        pattern: '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[\/]([1-9]|[1-2][0-9]|3[0-2]?)$'
      dry_forced_mac_address:
        type: string
        format: mac
      dry_forced_hostname:
        type: string
      dry_fake_reboot_marker_path:
        type: string
      dry_cluster_hosts_path:
        type: string

  error:
    type: object
    required:
      - kind
      - id
      - href
      - code
      - reason
    properties:
      kind:
        type: string
        enum: ['Error']
        description: Indicates the type of this object. Will always be 'Error'.
      id:
        type: integer
        format: int32
        description: Numeric identifier of the error.
        minimum: 400
        maximum: 504
      href:
        type: string
        description: Self link.
      code:
        type: string
        description: Globally unique code of the error, composed of the unique identifier of the API and the numeric identifier of the error. For example, if the numeric identifier of the error is 93 and the identifier of the API is assisted_install then the code will be ASSISTED-INSTALL-93.
      reason:
        type: string
        description: Human-readable description of the error.

  agent:
    type: object
    properties:
      id:
        type: integer
      status:
        $ref: '#/definitions/agent_status'
      created_at:
        type: string
        format: 'date-time'
      terminated_at:
        type: string
        format: 'date-time'

  agent_list:
    type: array
    items:
      $ref: '#/definitions/agent'

  agent_status:
    type: string
    enum: ['Running', 'Terminated']
