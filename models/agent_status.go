// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AgentStatus agent status
//
// swagger:model agent_status
type AgentStatus string

func NewAgentStatus(value AgentStatus) *AgentStatus {
	v := value
	return &v
}

const (

	// AgentStatusRunning captures enum value "Running"
	AgentStatusRunning AgentStatus = "Running"

	// AgentStatusTerminated captures enum value "Terminated"
	AgentStatusTerminated AgentStatus = "Terminated"
)

// for schema
var agentStatusEnum []interface{}

func init() {
	var res []AgentStatus
	if err := json.Unmarshal([]byte(`["Running","Terminated"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		agentStatusEnum = append(agentStatusEnum, v)
	}
}

func (m AgentStatus) validateAgentStatusEnum(path, location string, value AgentStatus) error {
	if err := validate.EnumCase(path, location, value, agentStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this agent status
func (m AgentStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAgentStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this agent status based on context it is used
func (m AgentStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
